openapi: "3.0.0"
info:
  version: 1.0.0
  title: memote
servers:
  - url: https://memote.an.r.appspot.com/
paths:
  /recommended_records:
    get:
      summary: get recommended records
      operationId: getRecommendedRecords
      tags:
        - recommended_records
      parameters:
        - in: query
          name: latitude
          schema:
            type: number
            format: double
          required: true
        - in: query
          name: longitude
          schema:
            type: number
            format: double
          required: true
      responses:
        '200':
          description: Successfully get recommended record
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FixedRecordViewCollection"
        '400':
          description: RequestBody is invalid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorViewModel"
        '401':
          description: Token missed or invalid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorViewModel"
        '500':
          description: Internal error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorViewModel"
  /fixed_records:
    get:
      summary: get fixed records
      operationId: getFixedRecords
      tags:
        - fixed_records
      parameters:
        - in: query
          name: is_fixed
          schema:
            type: boolean
          required: true
      responses:
        '200':
          description: Successfully get fixed records
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FixedRecordViewCollection"
        '400':
          description: RequestBody is invalid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorViewModel"
        '401':
          description: Token missed or invalid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorViewModel"
        '500':
          description: Internal error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorViewModel"
  /fixed_records/{recordId}:
    get:
      summary: get fixed record
      parameters:
        - in: path
          name: recordId
          schema:
            type: string
          required: true
      operationId: getFixedRecord
      tags:
        - fixed_records
      responses:
        '200':
          description: Successfully get fixed record
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FixedRecordViewModel"
        '400':
          description: RequestBody is invalid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorViewModel"
        '401':
          description: Token missed or invalid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorViewModel"
        '500':
          description: Internal error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorViewModel"
    put:
      summary: update fixed record
      parameters:
        - in: path
          name: recordId
          schema:
            type: string
          required: true
      operationId: updateFixedRecord
      tags:
        - fixed_records
      requestBody:
        description: fixed record entry
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FixedRecordViewModel"
      responses:
        '200':
          description: Successfully update fixed record
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FixedRecordViewModel"
        '400':
          description: RequestBody is invalid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorViewModel"
        '401':
          description: Token missed or invalid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorViewModel"
        '500':
          description: Internal error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorViewModel"
  /records:
    post:
      summary: post records
      operationId: postRecords
      tags:
        - records
      requestBody:
        description: the content of the record
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RecordViewModel"
      responses:
        '200':
          description: Successfully posted record
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessViewModel"
        '400':
          description: RequestBody is invalid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorViewModel"
        '401':
          description: Token missed or invalid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorViewModel"
        '500':
          description: Internal error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorViewModel"
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
  schemas:
    FixedRecordViewCollection:
      type: array
      items:
        $ref: "#/components/schemas/FixedRecordViewModel"
    FixedRecordViewModel:
      required:
        - id
        - mainTitle
        - mainPicture
        - isPictureFetched   
        - locations
        - message
        - emotionType
        - emotionLevel
        - lastRecommendedAt
        - createdAt
      properties:
        id:
          type: string
        mainTitle:
          type: string
        mainPicture:
          type: string
        isPictureFetched:
          type: boolean
        locations:
          type: array
          items:
            $ref: "#/components/schemas/StayedLocationViewModel"
        message:
          type: string
        emotionType:
          type: integer
        emotionLevel:
          type: integer
        lastRecommendedAt:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
    RecordViewModel:
      required:
        - id
        - locations
        - createdAt
      properties:
        id:
          type: string
        locations:
          type: array
          items:
            $ref: "#/components/schemas/LocationViewModel"
        createdAt:
          type: string
          format: date-time
    StayedLocationViewModel:
      required:
        - name
        - latitude
        - longitude
        - pictures
        - startTime
        - endTime
        - message
        - emotionType
        - emotionLevel
      properties:
        name:
          type: string
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        pictures:
          type: array
          items:
            type: string
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        message:
          type: string
        emotionType:
          type: integer
        emotionLevel:
          type: integer
    LocationViewModel:
      required:
        - lat
        - long
        - time
      properties:
        lat:
          type: number
          format: double
        long:
          type: number
          format: double
        time:
          type: string
          format: date-time
    SuccessViewModel:
      properties:
        success:
          type: string
    ErrorViewModel:
      properties:
        error:
          type: string
security:
    - bearerAuth: []
