openapi: 3.0.0
info:
  title: memote
  version: 1.0.0
servers:
- url: https://memote.an.r.appspot.com/
security:
- bearerAuth: []
paths:
  /recommended_records:
    get:
      operationId: getRecommendedRecords
      parameters:
      - explode: true
        in: query
        name: latitude
        required: true
        schema:
          format: double
          type: number
        style: form
      - explode: true
        in: query
        name: longitude
        required: true
        schema:
          format: double
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FixedRecordViewCollection'
          description: Successfully get recommended record
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorViewModel'
          description: RequestBody is invalid
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorViewModel'
          description: Token missed or invalid
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorViewModel'
          description: Internal error
      summary: get recommended records
      tags:
      - recommended_records
  /fixed_records:
    get:
      operationId: getFixedRecords
      parameters:
      - explode: true
        in: query
        name: is_fixed
        required: true
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FixedRecordViewCollection'
          description: Successfully get fixed records
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorViewModel'
          description: RequestBody is invalid
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorViewModel'
          description: Token missed or invalid
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorViewModel'
          description: Internal error
      summary: get fixed records
      tags:
      - fixed_records
  /fixed_records/{recordId}:
    get:
      operationId: getFixedRecord
      parameters:
      - explode: false
        in: path
        name: recordId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FixedRecordViewModel'
          description: Successfully get fixed record
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorViewModel'
          description: RequestBody is invalid
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorViewModel'
          description: Token missed or invalid
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorViewModel'
          description: Internal error
      summary: get fixed record
      tags:
      - fixed_records
    put:
      operationId: updateFixedRecord
      parameters:
      - explode: false
        in: path
        name: recordId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FixedRecordViewModel'
        description: fixed record entry
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FixedRecordViewModel'
          description: Successfully update fixed record
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorViewModel'
          description: RequestBody is invalid
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorViewModel'
          description: Token missed or invalid
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorViewModel'
          description: Internal error
      summary: update fixed record
      tags:
      - fixed_records
  /records:
    post:
      operationId: postRecords
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecordViewModel'
        description: the content of the record
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessViewModel'
          description: Successfully posted record
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorViewModel'
          description: RequestBody is invalid
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorViewModel'
          description: Token missed or invalid
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorViewModel'
          description: Internal error
      summary: post records
      tags:
      - records
components:
  schemas:
    FixedRecordViewCollection:
      items:
        $ref: '#/components/schemas/FixedRecordViewModel'
      type: array
    FixedRecordViewModel:
      example:
        isPictureFetched: true
        createdAt: 2000-01-23T04:56:07.000+00:00
        emotion_level: 5
        mainTitle: mainTitle
        emotion_type: 1
        mainPicture: mainPicture
        locations:
        - latitude: 0.8008281904610115
          name: name
          startTime: 2000-01-23T04:56:07.000+00:00
          endTime: 2000-01-23T04:56:07.000+00:00
          pictures:
          - pictures
          - pictures
          longitude: 6.027456183070403
        - latitude: 0.8008281904610115
          name: name
          startTime: 2000-01-23T04:56:07.000+00:00
          endTime: 2000-01-23T04:56:07.000+00:00
          pictures:
          - pictures
          - pictures
          longitude: 6.027456183070403
        id: id
        message: message
        lastRecommendedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          type: string
        mainTitle:
          type: string
        mainPicture:
          type: string
        isPictureFetched:
          type: boolean
        locations:
          items:
            $ref: '#/components/schemas/StayedLocationViewModel'
          type: array
        message:
          type: string
        emotion_type:
          type: integer
        emotion_level:
          type: integer
        lastRecommendedAt:
          format: date-time
          type: string
        createdAt:
          format: date-time
          type: string
      required:
      - createdAt
      - emotion_level
      - emotion_type
      - id
      - isPictureFetched
      - lastRecommendedAt
      - locations
      - mainPicture
      - mainTitle
      - message
    RecordViewModel:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        locations:
        - time: 2000-01-23T04:56:07.000+00:00
          lat: 0.8008281904610115
          long: 6.027456183070403
        - time: 2000-01-23T04:56:07.000+00:00
          lat: 0.8008281904610115
          long: 6.027456183070403
        id: id
      properties:
        id:
          type: string
        locations:
          items:
            $ref: '#/components/schemas/LocationViewModel'
          type: array
        createdAt:
          format: date-time
          type: string
      required:
      - createdAt
      - id
      - locations
    StayedLocationViewModel:
      example:
        latitude: 0.8008281904610115
        name: name
        startTime: 2000-01-23T04:56:07.000+00:00
        endTime: 2000-01-23T04:56:07.000+00:00
        pictures:
        - pictures
        - pictures
        longitude: 6.027456183070403
      properties:
        name:
          type: string
        latitude:
          format: double
          type: number
        longitude:
          format: double
          type: number
        pictures:
          items:
            type: string
          type: array
        startTime:
          format: date-time
          type: string
        endTime:
          format: date-time
          type: string
      required:
      - endTime
      - latitude
      - longitude
      - name
      - pictures
      - startTime
    LocationViewModel:
      example:
        time: 2000-01-23T04:56:07.000+00:00
        lat: 0.8008281904610115
        long: 6.027456183070403
      properties:
        lat:
          format: double
          type: number
        long:
          format: double
          type: number
        time:
          format: date-time
          type: string
      required:
      - lat
      - long
      - time
    SuccessViewModel:
      example:
        success: success
      properties:
        success:
          type: string
    ErrorViewModel:
      properties:
        error:
          type: string
  securitySchemes:
    bearerAuth:
      scheme: bearer
      type: http
