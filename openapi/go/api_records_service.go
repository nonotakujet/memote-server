/*
 * memote
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package viewmodel

import (
	"context"
	"net/http"
	"errors"
)

// RecordsApiService is a service that implents the logic for the RecordsApiServicer
// This service should implement the business logic for every endpoint for the RecordsApi API. 
// Include any external packages or services that will be required by this service.
type RecordsApiService struct {
}

// NewRecordsApiService creates a default api service
func NewRecordsApiService() RecordsApiServicer {
	return &RecordsApiService{}
}

// PostRecords - post records
func (s *RecordsApiService) PostRecords(ctx context.Context, recordViewModel RecordViewModel) (ImplResponse, error) {
	// TODO - update PostRecords with the required logic for this service method.
	// Add api_records_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, SuccessViewModel{}) or use other options such as http.Ok ...
	//return Response(200, SuccessViewModel{}), nil

	//TODO: Uncomment the next line to return response Response(400, ErrorViewModel{}) or use other options such as http.Ok ...
	//return Response(400, ErrorViewModel{}), nil

	//TODO: Uncomment the next line to return response Response(401, ErrorViewModel{}) or use other options such as http.Ok ...
	//return Response(401, ErrorViewModel{}), nil

	//TODO: Uncomment the next line to return response Response(500, ErrorViewModel{}) or use other options such as http.Ok ...
	//return Response(500, ErrorViewModel{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("PostRecords method not implemented")
}

