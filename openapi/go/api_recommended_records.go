/*
 * memote
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package viewmodel

import (
	"encoding/json"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

// A RecommendedRecordsApiController binds http requests to an api service and writes the service results to the http response
type RecommendedRecordsApiController struct {
	service RecommendedRecordsApiServicer
}

// NewRecommendedRecordsApiController creates a default api controller
func NewRecommendedRecordsApiController(s RecommendedRecordsApiServicer) Router {
	return &RecommendedRecordsApiController{service: s}
}

// Routes returns all of the api route for the RecommendedRecordsApiController
func (c *RecommendedRecordsApiController) Routes() Routes {
	return Routes{ 
		{
			"GetRecommendedRecords",
			strings.ToUpper("Get"),
			"/recommended_records",
			c.GetRecommendedRecords,
		},
	}
}

// GetRecommendedRecords - get recommended records
func (c *RecommendedRecordsApiController) GetRecommendedRecords(w http.ResponseWriter, r *http.Request) {
	query := r.URL.Query()
	latitude := query.Get("latitude")
	longitude := query.Get("longitude")
	result, err := c.service.GetRecommendedRecords(r.Context(), latitude, longitude)
	// If an error occurred, encode the error with the status code
	if err != nil {
		EncodeJSONResponse(err.Error(), &result.Code, w)
		return
	}
	// If no error, encode the body and the result code
	EncodeJSONResponse(result.Body, &result.Code, w)

}
